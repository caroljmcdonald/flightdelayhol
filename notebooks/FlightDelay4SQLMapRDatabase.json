{"paragraphs":[{"text":" %md\n### MapR-DB Connector for Apache Spark  \nThe Spark MapR Database Connector enables users to perform complex SQL queries and updates on top of MapR-DB using a Spark Dataset, while applying critical techniques such as projection and filter pushdown, custom partitioning, and data locality.\n<img src=\"https://mapr.com/blog/real-time-analysis-popular-uber-locations-spark-structured-streaming-machine-learning-kafka-and-mapr-db/assets/image7.png\">\n\n With MapR Database, a table is automatically partitioned into tablets across a cluster by key range, providing for scalable and fast reads and writes by row key. \n<img src=\"https://mapr.com/blog/real-time-analysis-popular-uber-locations-spark-structured-streaming-machine-learning-kafka-and-mapr-db/assets/image8.png\" width=\"400\" height=\"400\">\nIn this use case, the row key (the id) starts with the origin (destination airport codes), followed by the flightdate and carrier, so the table is automatically partitioned and sorted by the src, dst, date, and carrier.\n <img src=\"https://mapr.com/blog/tips-and-best-practices-to-take-advantage-of-spark-2-x/assets/image4.png\">\nThe Spark MapR Database Connector architecture has a connection object in every Spark Executor, allowing for distributed parallel writes, reads, or scans with MapR Database partitions.\n\n<img src=\"https://mapr.com/blog/real-time-analysis-popular-uber-locations-spark-structured-streaming-machine-learning-kafka-and-mapr-db/assets/image32.png\" width=\"400\" height=\"400\">\n\n","user":"mapr","dateUpdated":"2019-03-12T17:05:29+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>MapR-DB Connector for Apache Spark</h3>\n<p>The Spark MapR Database Connector enables users to perform complex SQL queries and updates on top of MapR-DB using a Spark Dataset, while applying critical techniques such as projection and filter pushdown, custom partitioning, and data locality.<br/><img src=\"https://mapr.com/blog/real-time-analysis-popular-uber-locations-spark-structured-streaming-machine-learning-kafka-and-mapr-db/assets/image7.png\"></p>\n<p>With MapR Database, a table is automatically partitioned into tablets across a cluster by key range, providing for scalable and fast reads and writes by row key.<br/><img src=\"https://mapr.com/blog/real-time-analysis-popular-uber-locations-spark-structured-streaming-machine-learning-kafka-and-mapr-db/assets/image8.png\" width=\"400\" height=\"400\"><br/>In this use case, the row key (the id) starts with the origin (destination airport codes), followed by the flightdate and carrier, so the table is automatically partitioned and sorted by the src, dst, date, and carrier.<br/> <img src=\"https://mapr.com/blog/tips-and-best-practices-to-take-advantage-of-spark-2-x/assets/image4.png\"><br/>The Spark MapR Database Connector architecture has a connection object in every Spark Executor, allowing for distributed parallel writes, reads, or scans with MapR Database partitions.</p>\n<img src=\"https://mapr.com/blog/real-time-analysis-popular-uber-locations-spark-structured-streaming-machine-learning-kafka-and-mapr-db/assets/image32.png\" width=\"400\" height=\"400\">\n</div>"}]},"apps":[],"jobName":"paragraph_1552408572676_-1192279099","id":"20190311-213501_729174936","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T17:05:29+0000","dateFinished":"2019-03-12T17:05:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37294"},{"title":"Import needed packages for Spark SQL","text":"%spark\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql._\n\n","user":"mapr","dateUpdated":"2019-03-12T16:48:38+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql._\n"}]},"apps":[],"jobName":"paragraph_1552408572636_-89549490","id":"20170508-144514_403247535","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:46:05+0000","dateFinished":"2019-03-12T16:46:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37295"},{"text":"%md\n### The MapR Database Flight Table rows have the following format:\n\n{\"id\":\"ATL_BOS_2018-01-01_DL_104\",\"fldate\":\"2018-01-01\",\"month\":1,\"dofW\":1,\n\"carrier\":\"DL\",\"src\":\"ATL\",\"dst\":\"BOS\",\"crsdephour\":9,\"crsdeptime\":850,\"depdelay\":0.0,\n\"crsarrtime\":1116,\"arrdelay\":0.0,\"crselapsedtime\":146.0,\"dist\":946.0, \n\"orig_dest\":\"ATL_BOS\", label:0.0, prediction:0.0}\n","user":"mapr","dateUpdated":"2019-03-12T16:38:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>The MapR Database Flight Table rows have the following format:</h3>\n<p>{&ldquo;id&rdquo;:&ldquo;ATL_BOS_2018-01-01_DL_104&rdquo;,&ldquo;fldate&rdquo;:&ldquo;2018-01-01&rdquo;,&ldquo;month&rdquo;:1,&ldquo;dofW&rdquo;:1,<br/>&ldquo;carrier&rdquo;:&ldquo;DL&rdquo;,&ldquo;src&rdquo;:&ldquo;ATL&rdquo;,&ldquo;dst&rdquo;:&ldquo;BOS&rdquo;,&ldquo;crsdephour&rdquo;:9,&ldquo;crsdeptime&rdquo;:850,&ldquo;depdelay&rdquo;:0.0,<br/>&ldquo;crsarrtime&rdquo;:1116,&ldquo;arrdelay&rdquo;:0.0,&ldquo;crselapsedtime&rdquo;:146.0,&ldquo;dist&rdquo;:946.0,<br/>&ldquo;orig_dest&rdquo;:&ldquo;ATL_BOS&rdquo;, label:0.0, prediction:0.0}</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1552408572639_984490652","id":"20190311-203402_1826680675","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:38:25+0000","dateFinished":"2019-03-12T16:38:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37296"},{"title":"Schema for Reading from MapR Database","text":"// define new schema with label and prediction for reading from MapR Database\nval schema = StructType(Array(\n    StructField(\"id\", StringType, true),\n    StructField(\"fldate\", StringType, true),\n    StructField(\"month\", IntegerType, true),\n    StructField(\"dofW\", IntegerType, true),\n    StructField(\"carrier\", StringType, true),\n    StructField(\"src\", StringType, true),\n    StructField(\"dst\", StringType, true),\n    StructField(\"crsdephour\", IntegerType, true),\n    StructField(\"crsdeptime\", IntegerType, true),\n    StructField(\"depdelay\", DoubleType, true),\n    StructField(\"crsarrtime\", IntegerType, true),\n    StructField(\"arrdelay\", DoubleType, true),\n    StructField(\"crselapsedtime\", DoubleType, true),\n    StructField(\"dist\", DoubleType, true),\n    StructField(\"orig_dest\", StringType, true),\n    StructField(\"label\", DoubleType, true),\n    StructField(\"prediction\", DoubleType, true)\n  ))","user":"mapr","dateUpdated":"2019-03-12T16:48:49+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"schema: org.apache.spark.sql.types.StructType = StructType(StructField(id,StringType,true), StructField(fldate,StringType,true), StructField(month,IntegerType,true), StructField(dofW,IntegerType,true), StructField(carrier,StringType,true), StructField(src,StringType,true), StructField(dst,StringType,true), StructField(crsdephour,IntegerType,true), StructField(crsdeptime,IntegerType,true), StructField(depdelay,DoubleType,true), StructField(crsarrtime,IntegerType,true), StructField(arrdelay,DoubleType,true), StructField(crselapsedtime,DoubleType,true), StructField(dist,DoubleType,true), StructField(orig_dest,StringType,true), StructField(label,DoubleType,true), StructField(prediction,DoubleType,true))\n"}]},"apps":[],"jobName":"paragraph_1552408572680_681265987","id":"20190306-211342_1150192494","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:48:49+0000","dateFinished":"2019-03-12T16:48:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37297"},{"title":"Imports for  Reading from MapR Database","text":"import org.apache.spark._\nimport com.mapr.db._\nimport com.mapr.db.spark._\nimport com.mapr.db.spark.impl._\nimport com.mapr.db.spark.sql._\n// MapR Database table to write to \nvar tableName: String = \"/user/mapr/flighttable\"\n// get spark session to read from MapR Database\nval spark = org.apache.spark.sql.SparkSession.builder().appName(\"flightread\").getOrCreate()","user":"mapr","dateUpdated":"2019-03-12T16:51:51+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark._\nimport com.mapr.db._\nimport com.mapr.db.spark._\nimport com.mapr.db.spark.impl._\nimport com.mapr.db.spark.sql._\ntableName: String = /user/mapr/flighttable\nspark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@171b82d3\n"}]},"apps":[],"jobName":"paragraph_1552408572681_-646769513","id":"20190306-011141_1523714467","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:51:51+0000","dateFinished":"2019-03-12T16:52:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37298"},{"text":"%md\n### Loading Data from MapR Database into a Spark Dataset\n\nTo load data from a MapR Database JSON table into an Apache Spark Dataset, we invoke the loadFromMapRDB method on a SparkSession object, providing the tableName and schema. This returns a DataFrame of the flight schema","user":"mapr","dateUpdated":"2019-03-12T17:04:56+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Loading Data from MapR Database into a Spark Dataset</h3>\n<p>To load data from a MapR Database JSON table into an Apache Spark Dataset, we invoke the loadFromMapRDB method on a SparkSession object, providing the tableName and schema. This returns a DataFrame of the flight schema</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1552408572683_-1867176039","id":"20190311-225414_469831482","dateCreated":"2019-03-12T16:36:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37299","dateFinished":"2019-03-12T17:04:56+0000","dateStarted":"2019-03-12T17:04:56+0000"},{"title":"Load Flight DataFrame from MapR Database","text":" // load flight dataframe from MapR Database \nval df = spark.sparkSession.loadFromMapRDB(tableName, schema2)\n// show the first 20 rows\ndf.show\n// create a temp view in order to use Spark SQL\ndf.createOrReplaceTempView(\"flights\")","user":"mapr","dateUpdated":"2019-03-12T16:52:52+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df: org.apache.spark.sql.DataFrame = [id: string, fldate: string ... 15 more fields]\n+--------------------+----------+-----+----+-------+---+---+----------+----------+--------+----------+--------+--------------+-----+---------+-----+----------+\n|                  id|    fldate|month|dofW|carrier|src|dst|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime| dist|orig_dest|label|prediction|\n+--------------------+----------+-----+----+-------+---+---+----------+----------+--------+----------+--------+--------------+-----+---------+-----+----------+\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|         9|       850|     0.0|      1116|     0.0|         146.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        11|      1122|     8.0|      1349|     0.0|         147.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        14|      1356|     9.0|      1623|     0.0|         147.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        16|      1620|     0.0|      1851|     3.0|         151.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        19|      1940|     6.0|      2210|     0.0|         150.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        12|      1248|     0.0|      1513|     0.0|         145.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        22|      2215|     0.0|        39|     0.0|         144.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        15|      1500|    21.0|      1734|    33.0|         154.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     WN|ATL|BOS|        15|      1500|   198.0|      1725|   208.0|         145.0|946.0|  ATL_BOS|  1.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     WN|ATL|BOS|        21|      2055|    14.0|      2330|     0.0|         155.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     WN|ATL|BOS|        10|      1015|   215.0|      1250|   191.0|         155.0|946.0|  ATL_BOS|  1.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-02|    1|   2|     DL|ATL|BOS|         9|       850|     9.0|      1116|     0.0|         146.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-02|    1|   2|     DL|ATL|BOS|        11|      1123|     0.0|      1350|     0.0|         147.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-02|    1|   2|     DL|ATL|BOS|        10|      1000|    22.0|      1232|    10.0|         152.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-02|    1|   2|     DL|ATL|BOS|        14|      1356|     6.0|      1623|    21.0|         147.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-02|    1|   2|     DL|ATL|BOS|        22|      2227|     8.0|        51|     0.0|         144.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-02|    1|   2|     DL|ATL|BOS|        16|      1620|     0.0|      1851|     0.0|         151.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-02|    1|   2|     DL|ATL|BOS|        19|      1940|    62.0|      2210|    50.0|         150.0|946.0|  ATL_BOS|  1.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-02|    1|   2|     DL|ATL|BOS|        12|      1248|    15.0|      1513|     7.0|         145.0|946.0|  ATL_BOS|  0.0|       0.0|\n|ATL_BOS_2018-01-0...|2018-01-02|    1|   2|     DL|ATL|BOS|        21|      2107|    12.0|      2335|    29.0|         148.0|946.0|  ATL_BOS|  0.0|       0.0|\n+--------------------+----------+-----+----+-------+---+---+----------+----------+--------+----------+--------+--------------+-----+---------+-----+----------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1552408572685_1036633687","id":"20190306-011320_1619042382","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:52:52+0000","dateFinished":"2019-03-12T16:53:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37300"},{"text":"%md \n## Explore and Query the Flight Table with Spark SQL\nNow we can query the MapR Database to ask questions with the Spark DataFrames domain-specific language or with Spark SQL. \n","user":"mapr","dateUpdated":"2019-03-12T16:54:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Explore and Query the Flight Table with Spark SQL</h2>\n<p>Now we can query the MapR Database to ask questions with the Spark DataFrames domain-specific language or with Spark SQL.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1552408572687_-966332292","id":"20170603-182655_1680505289","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:54:32+0000","dateFinished":"2019-03-12T16:54:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37301"},{"title":"Count the rows in the DataFrame","text":"// note how this value changes as you run it again\ndf.count","user":"mapr","dateUpdated":"2019-03-12T16:54:42+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res182: Long = 282628\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1552408572689_-661493923","id":"20190306-003457_1891238408","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:54:42+0000","dateFinished":"2019-03-12T16:55:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37302"},{"title":"Count the label, prediction by src, dst using DataFrame transformation","text":"// group by src, dst, label, prediction and count\ndf.groupBy(\"src\",\"dst\",\"label\",\"prediction\").count.show","user":"mapr","dateUpdated":"2019-03-12T16:55:15+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+---+-----+----------+-----+\n|src|dst|label|prediction|count|\n+---+---+-----+----------+-----+\n|CLT|DFW|  0.0|       0.0| 1701|\n|LAX|BOS|  1.0|       0.0|  116|\n|DEN|CLT|  0.0|       0.0|  944|\n|SFO|CLT|  1.0|       0.0|   60|\n|LGA|DFW|  0.0|       0.0| 1806|\n|DEN|EWR|  1.0|       0.0|  279|\n|ATL|CLT|  0.0|       0.0| 2489|\n|EWR|DFW|  0.0|       0.0| 1074|\n|IAH|SEA|  0.0|       0.0|  824|\n|SEA|SFO|  1.0|       0.0|  193|\n|EWR|BOS|  1.0|       0.0|  261|\n|IAH|SEA|  1.0|       0.0|   77|\n|LGA|CLT|  1.0|       0.0|  127|\n|SFO|ORD|  0.0|       0.0| 2661|\n|SFO|CLT|  0.0|       0.0|  872|\n|DFW|MIA|  0.0|       0.0| 1586|\n|CLT|SEA|  1.0|       0.0|   65|\n|ORD|BOS|  0.0|       0.0| 2451|\n|IAH|LGA|  0.0|       0.0| 1126|\n|LAX|EWR|  0.0|       0.0| 1739|\n+---+---+-----+----------+-----+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs","http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs","http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1552408572690_285688087","id":"20190307-013831_777164675","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:55:15+0000","dateFinished":"2019-03-12T16:55:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37303"},{"text":"%md\n## Projection and Filter Pushdown into MapR Database\nBelow, we see the physical plan for a DataFrame query, with projection and filter pushdown. This means that the scanning of the src, dst, and depdelay columns and the filter on the depdelay column are pushed down into MapR Database, meaning that the scanning and filtering will take place in MapR Database before returning the data to Spark. Projection pushdown minimizes data transfer between MapR Database and the Spark engine by omitting unnecessary fields from table scans. It is especially beneficial when a table contains many columns. Filter pushdown improves performance by reducing the amount of data passed between MapR Database and the Spark engine when filtering data.","user":"mapr","dateUpdated":"2019-03-12T16:36:12+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Projection and Filter Pushdown into MapR Database</h2>\n<p>Below, we see the physical plan for a DataFrame query, with projection and filter pushdown. This means that the scanning of the src, dst, and depdelay columns and the filter on the depdelay column are pushed down into MapR Database, meaning that the scanning and filtering will take place in MapR Database before returning the data to Spark. Projection pushdown minimizes data transfer between MapR Database and the Spark engine by omitting unnecessary fields from table scans. It is especially beneficial when a table contains many columns. Filter pushdown improves performance by reducing the amount of data passed between MapR Database and the Spark engine when filtering data.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1552408572691_986442019","id":"20190311-233318_669843904","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37304"},{"title":"Use Explain to show physical query plan","text":"// notice projection of selected fields [src#26125,dst#26126,depdelay#26129]\n// notice PushedFilters: [IsNotNull(src), IsNotNull(depdelay), EqualTo(src,ATL), GreaterThan(depdelay,1.0)]\ndf.filter(\"src = 'ATL' and depdelay > 1\").groupBy(\"src\", \"dst\").avg(\"depdelay\").sort(desc(\"avg(depdelay)\")).explain","user":"mapr","dateUpdated":"2019-03-12T16:55:58+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(3) Sort [avg(depdelay)#26558 DESC NULLS LAST], true, 0\n+- Exchange rangepartitioning(avg(depdelay)#26558 DESC NULLS LAST, 200)\n   +- *(2) HashAggregate(keys=[src#26392, dst#26393], functions=[avg(depdelay#26396)])\n      +- Exchange hashpartitioning(src#26392, dst#26393, 200)\n         +- *(1) HashAggregate(keys=[src#26392, dst#26393], functions=[partial_avg(depdelay#26396)])\n            +- *(1) Filter (((isnotnull(src#26392) && isnotnull(depdelay#26396)) && (src#26392 = ATL)) && (depdelay#26396 > 1.0))\n               +- *(1) Scan MapRDBRelation(/user/mapr/flighttable,StructType(StructField(id,StringType,true), StructField(fldate,StringType,true), StructField(month,IntegerType,true), StructField(dofW,IntegerType,true), StructField(carrier,StringType,true), StructField(src,StringType,true), StructField(dst,StringType,true), StructField(crsdephour,IntegerType,true), StructField(crsdeptime,IntegerType,true), StructField(depdelay,DoubleType,true), StructField(crsarrtime,IntegerType,true), StructField(arrdelay,DoubleType,true), StructField(crselapsedtime,DoubleType,true), StructField(dist,DoubleType,true), StructField(orig_dest,StringType,true), StructField(label,DoubleType,true), StructField(prediction,DoubleType,true)),MapRDBTableScanRDD[3838] at RDD at MapRDBBaseRDD.scala:21,InsertOrReplace) [src#26392,dst#26393,depdelay#26396] PushedFilters: [IsNotNull(src), IsNotNull(depdelay), EqualTo(src,ATL), GreaterThan(depdelay,1.0)], ReadSchema: struct<src:string,dst:string,depdelay:double>\n"}]},"apps":[],"jobName":"paragraph_1552408572693_1862735366","id":"20190311-233223_189893269","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:55:58+0000","dateFinished":"2019-03-12T16:56:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37305"},{"title":"What are the average departure delays originating from Atlanta? ","text":"df.filter(\"src = 'ATL' and depdelay > 1\").groupBy(\"src\", \"dst\").avg(\"depdelay\").sort(desc(\"avg(depdelay)\")).show","user":"mapr","dateUpdated":"2019-03-12T16:56:11+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+---+------------------+\n|src|dst|     avg(depdelay)|\n+---+---+------------------+\n|ATL|EWR|  58.1085801063022|\n|ATL|ORD| 46.42393736017897|\n|ATL|DFW|39.454460966542754|\n|ATL|LGA| 39.25498489425982|\n|ATL|CLT| 37.56777108433735|\n|ATL|SFO| 36.83008356545961|\n|ATL|MIA| 36.40260950605778|\n|ATL|IAH|  34.6390977443609|\n|ATL|BOS| 34.28295254833041|\n|ATL|DEN|30.825997952917092|\n|ATL|SEA| 28.90960451977401|\n|ATL|LAX| 27.19949012109624|\n+---+---+------------------+\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1552408572694_1048284246","id":"20190311-232848_1613662724","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:56:11+0000","dateFinished":"2019-03-12T16:56:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37306"},{"title":"Top 5 Longest departure delays","text":"%sql \nselect carrier,src, dst, depdelay,crsdephour, dist, dofW\nfrom flights \norder by depdelay desc limit 5 \n","user":"mapr","dateUpdated":"2019-03-12T16:56:20+0000","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"carrier":"string","src":"string","dst":"string","depdelay":"string","crsdephour":"string","dist":"string","dofW":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"carrier","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"src","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tsrc\tdst\tdepdelay\tcrsdephour\tdist\tdofW\nAA\tIAH\tMIA\t1559.0\t11\t964.0\t5\nAA\tIAH\tDFW\t1445.0\t18\t224.0\t3\nAA\tBOS\tDFW\t1345.0\t10\t1562.0\t4\nUA\tBOS\tORD\t1334.0\t9\t867.0\t4\nAA\tLAX\tMIA\t1283.0\t9\t2342.0\t1\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1552408572695_532204272","id":"20171110-195321_1924356975","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:56:20+0000","dateFinished":"2019-03-12T16:56:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37307"},{"title":"Prediction by Carrier","text":"%sql\nselect carrier, prediction, count(prediction) from flights \ngroup by carrier, prediction order by carrier","user":"mapr","dateUpdated":"2019-03-12T16:57:21+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"carrier":"string","prediction":"string","count(prediction)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"carrier","index":0,"aggr":"sum"}],"groups":[{"name":"prediction","index":1,"aggr":"sum"}],"values":[{"name":"count(prediction)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tprediction\tcount(prediction)\nAA\t1.0\t8\nAA\t0.0\t109419\nDL\t0.0\t58195\nUA\t0.0\t98978\nWN\t0.0\t16028\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1552408572696_1798952777","id":"20171110-195759_439800395","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:56:48+0000","dateFinished":"2019-03-12T16:57:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37308"},{"title":"Label by Carrier","text":"%sql\nselect carrier, label, count(label) from flights \ngroup by carrier, label order by carrier","user":"mapr","dateUpdated":"2019-03-12T16:57:21+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"carrier":"string","prediction":"string","count(prediction)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"carrier","index":0,"aggr":"sum"}],"groups":[{"name":"label","index":1,"aggr":"sum"}],"values":[{"name":"count(label)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tlabel\tcount(label)\nAA\t1.0\t11827\nAA\t0.0\t97600\nDL\t1.0\t5465\nDL\t0.0\t52730\nUA\t0.0\t88465\nUA\t1.0\t10513\nWN\t1.0\t2164\nWN\t0.0\t13864\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1552408572698_1378198449","id":"20190307-185916_989655140","dateCreated":"2019-03-12T16:36:12+0000","dateStarted":"2019-03-12T16:56:52+0000","dateFinished":"2019-03-12T16:57:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37309"},{"title":"Label  by Destination Airport","text":"%sql\nSELECT dst,label, count(label)  \nFROM flights \nGROUP BY dst, label\n","user":"mapr","dateUpdated":"2019-03-12T16:57:43+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"dst":"string","count(label)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"dst","index":0,"aggr":"sum"}],"groups":[{"name":"label","index":1,"aggr":"sum"}],"values":[{"name":"count(label)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dst\tlabel\tcount(label)\nDEN\t0.0\t20975\nCLT\t0.0\t15378\nBOS\t0.0\t16557\nLGA\t1.0\t2425\nLGA\t0.0\t18009\nMIA\t1.0\t1785\nCLT\t1.0\t1421\nDFW\t0.0\t22434\nIAH\t1.0\t1504\nSEA\t0.0\t11505\nEWR\t1.0\t2855\nEWR\t0.0\t15681\nMIA\t0.0\t16218\nIAH\t0.0\t16037\nLAX\t0.0\t24325\nORD\t1.0\t3535\nORD\t0.0\t28779\nSFO\t1.0\t2997\nDFW\t1.0\t2513\nATL\t1.0\t2809\nDEN\t1.0\t2227\nLAX\t1.0\t2544\nSEA\t1.0\t1221\nBOS\t1.0\t2133\nSFO\t0.0\t19353\nATL\t0.0\t27408\n"}]},"apps":[],"jobName":"paragraph_1552408572699_-863713678","id":"20171122-204956_303346727","dateCreated":"2019-03-12T16:36:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37310","dateFinished":"2019-03-12T16:57:42+0000","dateStarted":"2019-03-12T16:57:35+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs","http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs","http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs","http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs","http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs"],"interpreterSettingId":"spark"}}},{"title":"Label Departure Delay by Originating Airport","text":"%sql\nSELECT src, label, count(label)\nFROM flights \nGROUP BY src, label\n","user":"mapr","dateUpdated":"2019-03-12T16:57:54+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"src":"string","label":"string","count(label)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"src","index":0,"aggr":"sum"}],"groups":[{"name":"label","index":1,"aggr":"sum"}],"values":[{"name":"count(label)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"src\tlabel\tcount(label)\nDEN\t0.0\t21052\nCLT\t0.0\t14912\nBOS\t0.0\t16840\nLGA\t1.0\t1984\nLGA\t0.0\t18498\nMIA\t1.0\t2340\nCLT\t1.0\t1796\nDFW\t0.0\t22114\nIAH\t1.0\t1862\nSEA\t0.0\t11833\nEWR\t1.0\t2372\nEWR\t0.0\t16279\nMIA\t0.0\t15649\nIAH\t0.0\t15812\nLAX\t0.0\t24694\nORD\t1.0\t4128\nORD\t0.0\t27944\nSFO\t1.0\t2308\nDFW\t1.0\t2858\nATL\t1.0\t3186\nDEN\t1.0\t2358\nLAX\t1.0\t2170\nSEA\t1.0\t864\nBOS\t1.0\t1743\nATL\t0.0\t26979\nSFO\t0.0\t20053\n"}]},"apps":[],"jobName":"paragraph_1552408572702_-1860153986","id":"20171122-204822_1853914961","dateCreated":"2019-03-12T16:36:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37312","dateFinished":"2019-03-12T16:57:54+0000","dateStarted":"2019-03-12T16:57:47+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs","http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs","http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs","http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs","http://mapr-resman:8088/proxy/application_1551978809362_0005//jobs"],"interpreterSettingId":"spark"}}},{"title":"Prediction Departure Delay by Originating Airport","text":"%sql\nSELECT src, prediction, count(prediction)\nFROM flights \nGROUP BY src, prediction\n","user":"mapr","dateUpdated":"2019-03-12T16:57:22+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"src":"string","label":"string","count(label)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"src","index":0,"aggr":"sum"}],"groups":[{"name":"prediction","index":1,"aggr":"sum"}],"values":[{"name":"count(prediction)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"src\tprediction\tcount(prediction)\nDEN\t0.0\t13668\nCLT\t0.0\t10381\nBOS\t0.0\t14141\nLGA\t1.0\t7546\nLGA\t0.0\t12936\nMIA\t1.0\t9119\nCLT\t1.0\t6327\nDFW\t0.0\t13541\nIAH\t1.0\t5036\nSEA\t0.0\t11369\nEWR\t1.0\t8223\nEWR\t0.0\t10428\nMIA\t0.0\t8870\nIAH\t0.0\t12638\nLAX\t0.0\t20980\nORD\t1.0\t18516\nORD\t0.0\t13556\nSFO\t1.0\t8289\nDFW\t1.0\t11431\nATL\t1.0\t12183\nDEN\t1.0\t9742\nLAX\t1.0\t5884\nSEA\t1.0\t1328\nBOS\t1.0\t4442\nATL\t0.0\t17982\nSFO\t0.0\t14072\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1552408572703_1551792971","id":"20190307-190334_411445587","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37313"},{"title":"Count of Departure Delays by Day of the Week (1=Monday, 7=Sunday)","text":"%sql\nselect dofW, label, count(label), prediction, count(prediction)\nfrom flights \ngroup by dofW, label, prediction\n","user":"mapr","dateUpdated":"2019-03-12T16:57:22+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"dofW":"string","label":"string","count(label)":"string","prediction":"string","count(prediction)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"dofW","index":0,"aggr":"sum"}],"groups":[{"name":"label","index":1,"aggr":"sum"}],"values":[{"name":"count(label)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dofW\tlabel\tcount(label)\tprediction\tcount(prediction)\n1\t0.0\t22838\t0.0\t22838\n3\t1.0\t2395\t1.0\t2395\n3\t0.0\t12663\t1.0\t12663\n6\t0.0\t25114\t0.0\t25114\n5\t1.0\t1607\t0.0\t1607\n3\t0.0\t24127\t0.0\t24127\n1\t1.0\t1660\t0.0\t1660\n4\t1.0\t3440\t1.0\t3440\n3\t1.0\t1684\t0.0\t1684\n1\t0.0\t14831\t1.0\t14831\n5\t0.0\t13922\t1.0\t13922\n2\t1.0\t2963\t1.0\t2963\n2\t0.0\t24206\t0.0\t24206\n7\t1.0\t2796\t1.0\t2796\n7\t1.0\t1458\t0.0\t1458\n5\t0.0\t23772\t0.0\t23772\n6\t0.0\t5926\t1.0\t5926\n7\t0.0\t20786\t0.0\t20786\n6\t1.0\t1714\t0.0\t1714\n2\t0.0\t14136\t1.0\t14136\n4\t0.0\t14568\t1.0\t14568\n7\t0.0\t13186\t1.0\t13186\n1\t1.0\t3113\t1.0\t3113\n2\t1.0\t1534\t0.0\t1534\n4\t1.0\t1478\t0.0\t1478\n5\t1.0\t3186\t1.0\t3186\n6\t1.0\t941\t1.0\t941\n4\t0.0\t22584\t0.0\t22584\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1552408572704_-1984496454","id":"20171123-101016_2040441762","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37314"},{"title":"Count of Departure Delays by Carrier (where label=1)","text":"%sql\nselect carrier, count(label)\nfrom flights where label = 1\ngroup by carrier\norder by carrier","user":"mapr","dateUpdated":"2019-03-12T16:57:22+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"carrier":"string","count(label)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"carrier","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"count(label)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tcount(label)\nAA\t11827\nDL\t5465\nUA\t10513\nWN\t2164\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1552408572705_785450974","id":"20171123-042011_1532799341","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37315"},{"title":"Count of Delayed Not Delayed  by Carrier","text":"%sql\nSELECT label, count(label),carrier\nFROM flights\nGROUP BY carrier, label\norder by carrier\n","user":"mapr","dateUpdated":"2019-03-12T16:57:22+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":false,"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"label":"string","count(label)":"string","carrier":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"carrier","index":2,"aggr":"sum"}],"groups":[{"name":"label","index":0,"aggr":"sum"}],"values":[{"name":"count(label)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label\tcount(label)\tcarrier\n0.0\t97600\tAA\n1.0\t11827\tAA\n1.0\t5465\tDL\n0.0\t52730\tDL\n0.0\t88465\tUA\n1.0\t10513\tUA\n0.0\t13864\tWN\n1.0\t2164\tWN\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1552408572707_1900780804","id":"20170524-144751_554129160","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37316"},{"title":"Count of Departure Delays by Hour of Day","text":"%sql\nselect crsdephour, count(depdelay)\nfrom flights where depdelay > 40\ngroup by crsdephour\n","user":"mapr","dateUpdated":"2019-03-12T16:57:22+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"crsdephour","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"count(depdelay)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"crsdephour\tcount(depdelay)\n12\t1893\n22\t1066\n1\t51\n13\t1728\n16\t2309\n6\t518\n20\t2260\n5\t175\n19\t2198\n15\t1969\n9\t1112\n17\t2434\n8\t1067\n23\t364\n7\t1068\n10\t1472\n24\t58\n21\t1180\n11\t1321\n14\t2041\n0\t106\n18\t2929\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1552408572708_-996175947","id":"20171129-200107_756396508","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37317"},{"title":"Count of Delayed , Not Delayed by Hour","text":"%sql\nSELECT prediction, count(prediction),crsdephour\nFROM flights\nGROUP BY crsdephour, prediction\n","user":"mapr","dateUpdated":"2019-03-12T16:57:22+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":false,"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"prediction":"string","count(prediction)":"string","crsdephour":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"crsdephour","index":2,"aggr":"sum"}],"groups":[{"name":"prediction","index":0,"aggr":"sum"}],"values":[{"name":"count(prediction)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"prediction\tcount(prediction)\tcrsdephour\n0.0\t14116\t11\n1.0\t1096\t9\n1.0\t4538\t12\n1.0\t11552\t19\n0.0\t1268\t1\n1.0\t11411\t20\n0.0\t23136\t7\n1.0\t2145\t11\n0.0\t1517\t19\n1.0\t714\t23\n1.0\t12656\t17\n1.0\t15286\t18\n1.0\t585\t8\n1.0\t8307\t14\n0.0\t2124\t21\n1.0\t5567\t21\n0.0\t2609\t18\n0.0\t2355\t23\n0.0\t1457\t0\n1.0\t6442\t13\n1.0\t24\t24\n0.0\t3240\t22\n0.0\t14145\t12\n0.0\t17483\t8\n0.0\t17317\t10\n0.0\t1524\t20\n0.0\t8857\t14\n1.0\t5068\t22\n0.0\t9181\t13\n1.0\t297\t7\n1.0\t11639\t16\n0.0\t1051\t24\n0.0\t17178\t6\n0.0\t14962\t9\n0.0\t18\t2\n0.0\t5331\t16\n1.0\t9109\t15\n1.0\t148\t0\n0.0\t6162\t15\n0.0\t6265\t5\n1.0\t1482\t10\n0.0\t3266\t17\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1552408572709_106694940","id":"20170524-095127_757444423","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37318"},{"title":"Count of Departure Delays by Origin, Destination","text":"%sql\nselect src, dst, count(label)\nfrom flights where label=1.0\ngroup by src, dst\nORDER BY count(label) desc\n","user":"mapr","dateUpdated":"2019-03-12T16:57:22+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"src":"string","dst":"string","count(label)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"src","index":0,"aggr":"sum"}],"groups":[{"name":"dst","index":1,"aggr":"sum"}],"values":[{"name":"count(label)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"src\tdst\tcount(label)\nORD\tLGA\t601\nLAX\tSFO\t589\nATL\tEWR\t576\nLGA\tORD\t541\nORD\tSFO\t478\nSFO\tLAX\t476\nATL\tLGA\t464\nORD\tLAX\t433\nORD\tDFW\t432\nDEN\tSFO\t395\nDFW\tORD\t392\nEWR\tATL\t386\nMIA\tLGA\t362\nORD\tEWR\t353\nSFO\tORD\t351\nLGA\tATL\t350\nORD\tATL\t337\nDFW\tATL\t337\nORD\tBOS\t329\nDEN\tLAX\t321\nLAX\tDEN\t310\nORD\tDEN\t310\nMIA\tATL\t304\nSFO\tDEN\t303\nLAX\tORD\t302\nEWR\tORD\t300\nATL\tDFW\t297\nBOS\tLGA\t285\nATL\tLAX\t280\nATL\tORD\t279\nDEN\tEWR\t279\nLGA\tBOS\t279\nIAH\tEWR\t276\nBOS\tEWR\t275\nDFW\tSFO\t272\nDEN\tORD\t272\nBOS\tORD\t271\nMIA\tORD\t267\nIAH\tDFW\t266\nDFW\tIAH\t265\nMIA\tDFW\t264\nEWR\tSFO\t262\nEWR\tBOS\t261\nCLT\tEWR\t261\nATL\tMIA\t259\nLGA\tMIA\t254\nATL\tBOS\t247\nORD\tSEA\t236\nDFW\tMIA\t227\nDFW\tDEN\t226\nORD\tMIA\t223\nORD\tIAH\t220\nDFW\tLAX\t220\nDFW\tLGA\t219\nSFO\tEWR\t219\nCLT\tORD\t214\nLAX\tATL\t209\nMIA\tEWR\t207\nEWR\tLAX\t207\nSFO\tDFW\t205\nMIA\tLAX\t204\nIAH\tSFO\t202\nDFW\tEWR\t201\nSFO\tSEA\t201\nDEN\tDFW\t201\nATL\tDEN\t199\nBOS\tATL\t198\nIAH\tORD\t195\nSEA\tSFO\t193\nEWR\tMIA\t190\nCLT\tATL\t189\nLGA\tDEN\t189\nATL\tSFO\t189\nDFW\tCLT\t188\nDEN\tLGA\t187\nCLT\tBOS\t186\nEWR\tDEN\t185\nMIA\tBOS\t183\nEWR\tIAH\t180\nDFW\tSEA\t178\nATL\tCLT\t177\nORD\tCLT\t176\nLAX\tDFW\t176\nMIA\tCLT\t174\nSFO\tBOS\t168\nEWR\tCLT\t167\nMIA\tSFO\t166\nLGA\tDFW\t165\nDEN\tATL\t164\nDEN\tSEA\t163\nEWR\tDFW\t161\nCLT\tDFW\t159\nIAH\tLGA\t154\nCLT\tLGA\t153\nSEA\tORD\t151\nCLT\tMIA\t145\nLAX\tEWR\t141\nIAH\tDEN\t141\nIAH\tLAX\t139\nIAH\tATL\t136\nDFW\tBOS\t133\nSEA\tDEN\t130\nSFO\tATL\t130\nLAX\tMIA\t129\nLGA\tCLT\t127\nATL\tIAH\t127\nMIA\tIAH\t126\nCLT\tSFO\t126\nBOS\tSFO\t125\nSFO\tIAH\t124\nDEN\tIAH\t122\nBOS\tCLT\t119\nDEN\tBOS\t118\nLAX\tBOS\t116\nBOS\tLAX\t115\nCLT\tDEN\t109\nCLT\tLAX\t100\nSEA\tDFW\t100\nBOS\tMIA\t99\nIAH\tMIA\t97\nATL\tSEA\t92\nIAH\tBOS\t92\nCLT\tIAH\t89\nBOS\tDFW\t87\nIAH\tCLT\t87\nBOS\tDEN\t83\nLGA\tIAH\t79\nIAH\tSEA\t77\nEWR\tSEA\t73\nLAX\tSEA\t72\nSFO\tMIA\t71\nDEN\tCLT\t70\nSEA\tATL\t69\nLAX\tCLT\t67\nSEA\tEWR\t67\nDEN\tMIA\t66\nCLT\tSEA\t65\nBOS\tIAH\t63\nSFO\tCLT\t60\nLAX\tIAH\t59\nSEA\tIAH\t50\nSEA\tLAX\t49\nMIA\tDEN\t42\nMIA\tSEA\t41\nSEA\tMIA\t25\nBOS\tSEA\t23\nSEA\tBOS\t21\nSEA\tCLT\t9\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1552408572710_-197054471","id":"20171123-102627_1669385618","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37319"},{"title":"Calculate some more metrics","text":"val lp = df.select( \"label\", \"prediction\")\nval counttotal = lp.count().toDouble\nval correct = lp.filter($\"label\" === $\"prediction\").count().toDouble\nval wrong = lp.filter(not($\"label\" === $\"prediction\")).count().toDouble\nval truep =( lp.filter($\"label\" === 1.0).filter($\"label\" === $\"prediction\").count()) /counttotal\nval truen = (lp.filter($\"label\" === 0.0).filter($\"label\" === $\"prediction\").count())/counttotal\nval falsep = (lp.filter($\"label\" === 1.0).filter(not($\"label\" === $\"prediction\")).count())/counttotal\nval falsen = (lp.filter($\"label\" === 0.0).filter(not($\"label\" === $\"prediction\")).count())/counttotal\nval ratioWrong=wrong/counttotal\nval ratioCorrect=correct/counttotal\n\n","user":"mapr","dateUpdated":"2019-03-12T16:36:12+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lp: org.apache.spark.sql.DataFrame = [label: double, prediction: double]\ncounttotal: Double = 282628.0\ncorrect: Double = 182261.0\nwrong: Double = 100367.0\ntruep: Double = 0.06663883267050681\ntruen: Double = 0.5782406555613739\nfalsep: Double = 0.03939807803897703\nfalsen: Double = 0.3157224337291422\nratioWrong: Double = 0.3551205117681192\nratioCorrect: Double = 0.6448794882318808\nprecision: Double = 0.628449397710968\n"}]},"apps":[],"jobName":"paragraph_1552408572712_-2057822081","id":"20181015-224231_2027590368","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37320"},{"title":"Unpersist Dataframe","text":"// when you are finished with your queries please run this\ndf.unpersist","user":"mapr","dateUpdated":"2019-03-12T16:36:12+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1552408572714_-1057279614","id":"20190312-154408_916743367","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37322"},{"text":"%md\n## End of Notebook \nThis is the end of this optional notebook\nWhen you are finished, make sure you ran the command above to unpersist the cached DataFrames.\nNext:\n* This is the end of this workshop, if you have time you can look at the graphframes lab\n* Scroll up to the top of this notebook page\n* Click on the Zeppelin Icon at the top of this page\n* This will take you to the list of notebooks\n* Select the notebook FlightDelay5GraphFrames","user":"mapr","dateUpdated":"2019-03-12T17:03:18+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>End of Notebook</h2>\n<p>This is the end of this optional notebook<br/>When you are finished, make sure you ran the command above to unpersist the cached DataFrames.<br/>Next:<br/>* This is the end of this workshop, if you have time you can look at the graphframes lab<br/>* Scroll up to the top of this notebook page<br/>* Click on the Zeppelin Icon at the top of this page<br/>* This will take you to the list of notebooks<br/>* Select the notebook FlightDelay5GraphFrames</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1552408572715_-1704290230","id":"20190312-154230_1455949290","dateCreated":"2019-03-12T16:36:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:37323","dateFinished":"2019-03-12T17:03:18+0000","dateStarted":"2019-03-12T17:03:18+0000"},{"user":"mapr","dateUpdated":"2019-03-12T16:36:12+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1552408572716_1766899278","id":"20190307-175040_1835736035","dateCreated":"2019-03-12T16:36:12+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:37324"}],"name":"FlightDelay4SQLMapRDatabase","id":"2E7FJ9ZPD","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}