{"paragraphs":[{"text":"%md\n# Prediction Flight Delays with Spark ML\nThis notebook demonstrates how to use Apache Spark’s ML pipelines with a Random Forest Classifier to predict flight delays. For more information, see [this](https://mapr.com/ebook/getting-started-with-apache-spark-v2/)  MapR Spark ebook.\n<img src=\"https://mapr.com/blog/fast-data-processing-pipeline-predicting-flight-delays-using-apache-apis-pt-1/assets/spark-rdd-based-api.png\">","user":"mapr","dateUpdated":"2019-03-04T23:47:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Prediction Flight Delays with Spark ML</h1>\n<p>This notebook demonstrates how to use Apache Spark’s ML pipelines with a Random Forest Classifier to predict flight delays. For more information, see <a href=\"https://mapr.com/ebook/getting-started-with-apache-spark-v2/\">this</a> MapR Spark ebook.<br/><img src=\"https://mapr.com/blog/fast-data-processing-pipeline-predicting-flight-delays-using-apache-apis-pt-1/assets/spark-rdd-based-api.png\"></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1551718401487_2130125119","id":"20190220-173254_1728425170","dateCreated":"2019-03-04T16:53:21+0000","dateStarted":"2019-03-04T23:20:21+0000","dateFinished":"2019-03-04T23:20:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1313"},{"text":"%md \n## Data Exploration\nFor this tutorial, we'll be using data from http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time.\nThe CSV data has been cleaned and tranformed into a JSON files with the following format: \n{\"id\":\"ATL_BOS_2018-01-01_DL_104\",\"fldate\":\"2018-01-01\",\"month\":1,\"dofW\":1,\"carrier\":\"DL\",\"src\":\"ATL\",\"dst\":\"BOS\",\"crsdephour\":9,\n\"crsdeptime\":850,\"depdelay\":0.0,\"crsarrtime\":1116,\"arrdelay\":0.0,\"crselapsedtime\":146.0,\"dist\":946.0}\nWe use a Scala case class and Structype to define the schema, corresponding to a line in the JSON data file.","user":"mapr","dateUpdated":"2019-03-04T23:20:28+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Data Exploration</h2>\n<p>For this tutorial, we&rsquo;ll be using data from <a href=\"http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time\">http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time</a>.<br/>The CSV data has been cleaned and tranformed into a JSON files with the following format:<br/>{&ldquo;id&rdquo;:&ldquo;ATL_BOS_2018-01-01_DL_104&rdquo;,&ldquo;fldate&rdquo;:&ldquo;2018-01-01&rdquo;,&ldquo;month&rdquo;:1,&ldquo;dofW&rdquo;:1,&ldquo;carrier&rdquo;:&ldquo;DL&rdquo;,&ldquo;src&rdquo;:&ldquo;ATL&rdquo;,&ldquo;dst&rdquo;:&ldquo;BOS&rdquo;,&ldquo;crsdephour&rdquo;:9,<br/>&ldquo;crsdeptime&rdquo;:850,&ldquo;depdelay&rdquo;:0.0,&ldquo;crsarrtime&rdquo;:1116,&ldquo;arrdelay&rdquo;:0.0,&ldquo;crselapsedtime&rdquo;:146.0,&ldquo;dist&rdquo;:946.0}<br/>We use a Scala case class and Structype to define the schema, corresponding to a line in the JSON data file.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1551718401512_1012703938","id":"20170530-122945_1594214131","dateCreated":"2019-03-04T16:53:21+0000","dateStarted":"2019-03-04T23:20:28+0000","dateFinished":"2019-03-04T23:20:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1314"},{"title":"Import needed packages","text":"%spark\nimport org.apache.spark._\nimport org.apache.spark.ml._\nimport org.apache.spark.ml.feature._\nimport org.apache.spark.ml.classification._\nimport org.apache.spark.ml.evaluation._\nimport org.apache.spark.ml.tuning._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\n","user":"mapr","dateUpdated":"2019-03-04T23:20:11+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark._\nimport org.apache.spark.ml._\nimport org.apache.spark.ml.feature._\nimport org.apache.spark.ml.classification._\nimport org.apache.spark.ml.evaluation._\nimport org.apache.spark.ml.tuning._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\n"}]},"apps":[],"jobName":"paragraph_1551718401515_1595764828","id":"20170508-144514_403247535","dateCreated":"2019-03-04T16:53:21+0000","dateStarted":"2019-03-04T22:56:39+0000","dateFinished":"2019-03-04T22:57:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1315"},{"title":"Define Schema for JSON file data","text":"%spark\n\n//Below we specify the schema and scala class corresponding to the Dataset.\n\ncase class Flight(id: String,fldate: String,month:Integer, dofW: Integer, carrier: String, src: String,dst: String, crsdephour: Integer, crsdeptime: Integer, depdelay: Double, crsarrtime: Integer, arrdelay: Double, crselapsedtime: Double, dist: Double)\n  \n  val schema = StructType(Array(\n    StructField(\"id\", StringType, true),\n    StructField(\"fldate\", StringType, true),\n    StructField(\"month\", IntegerType, true),\n    StructField(\"dofW\", IntegerType, true),\n    StructField(\"carrier\", StringType, true),\n    StructField(\"src\", StringType, true),\n    StructField(\"dst\", StringType, true),\n    StructField(\"crsdephour\", IntegerType, true),\n    StructField(\"crsdeptime\", IntegerType, true),\n    StructField(\"depdelay\", DoubleType, true),\n    StructField(\"crsarrtime\", IntegerType, true),\n    StructField(\"arrdelay\", DoubleType, true),\n    StructField(\"crselapsedtime\", DoubleType, true),\n    StructField(\"dist\", DoubleType, true)\n  ))\n   ","user":"mapr","dateUpdated":"2019-03-04T23:24:54+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class Flight\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(id,StringType,true), StructField(fldate,StringType,true), StructField(month,IntegerType,true), StructField(dofW,IntegerType,true), StructField(carrier,StringType,true), StructField(src,StringType,true), StructField(dst,StringType,true), StructField(crsdephour,IntegerType,true), StructField(crsdeptime,IntegerType,true), StructField(depdelay,DoubleType,true), StructField(crsarrtime,IntegerType,true), StructField(arrdelay,DoubleType,true), StructField(crselapsedtime,DoubleType,true), StructField(dist,DoubleType,true))\n"}]},"apps":[],"jobName":"paragraph_1551718401519_1743968773","id":"20170508-150032_326029627","dateCreated":"2019-03-04T16:53:21+0000","dateStarted":"2019-03-04T23:07:28+0000","dateFinished":"2019-03-04T23:07:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1316"},{"title":"Read the data from JSON file into a Dataset of type Flight","text":"\nimport spark.implicits._\n\nvar file =\"maprfs:///user/mapr/data/flightdata2018.json\"\n\n// Below we specify the data source file, schema and scala class to load the Dataset. \nval df: Dataset[Flight] = spark.read.format(\"json\").option(\"inferSchema\", \"false\").schema(schema).load(file).as[Flight]\n \ndf.show\n","user":"mapr","dateUpdated":"2019-03-04T23:25:41+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import spark.implicits._\nfile: String = maprfs:///user/mapr/data/flightdata2018.json\ndf: org.apache.spark.sql.Dataset[Flight] = [id: string, fldate: string ... 12 more fields]\n+--------------------+----------+-----+----+-------+---+---+----------+----------+--------+----------+--------+--------------+-----+\n|                  id|    fldate|month|dofW|carrier|src|dst|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime| dist|\n+--------------------+----------+-----+----+-------+---+---+----------+----------+--------+----------+--------+--------------+-----+\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|         9|       850|     0.0|      1116|     0.0|         146.0|946.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        11|      1122|     8.0|      1349|     0.0|         147.0|946.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        14|      1356|     9.0|      1623|     0.0|         147.0|946.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        16|      1620|     0.0|      1851|     3.0|         151.0|946.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        19|      1940|     6.0|      2210|     0.0|         150.0|946.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        12|      1248|     0.0|      1513|     0.0|         145.0|946.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        22|      2215|     0.0|        39|     0.0|         144.0|946.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        15|      1500|    21.0|      1734|    33.0|         154.0|946.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     WN|ATL|BOS|        15|      1500|   198.0|      1725|   208.0|         145.0|946.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     WN|ATL|BOS|        21|      2055|    14.0|      2330|     0.0|         155.0|946.0|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     WN|ATL|BOS|        10|      1015|   215.0|      1250|   191.0|         155.0|946.0|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|        11|      1114|     0.0|      1238|     0.0|          84.0|226.0|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|         8|       845|     0.0|      1011|     0.0|          86.0|226.0|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|        15|      1548|     0.0|      1710|     0.0|          82.0|226.0|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|         7|       705|     0.0|       821|     0.0|          76.0|226.0|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|        12|      1226|     0.0|      1347|     0.0|          81.0|226.0|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|        22|      2205|     0.0|      2319|     1.0|          74.0|226.0|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|CLT|        22|      2210|    11.0|      2324|     0.0|          74.0|226.0|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|CLT|        15|      1543|     1.0|      1659|     0.0|          76.0|226.0|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|CLT|        10|      1008|     0.0|      1124|     0.0|          76.0|226.0|\n+--------------------+----------+-----+----+-------+---+---+----------+----------+--------+----------+--------+--------------+-----+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1551718401522_-1181722677","id":"20170508-150131_378637203","dateCreated":"2019-03-04T16:53:21+0000","dateStarted":"2019-03-04T23:19:49+0000","dateFinished":"2019-03-04T23:19:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1317"},{"title":"Add origin_dest column  and display the first 20 rows","text":"val df1 = df.withColumn(\"orig_dest\", concat($\"src\",lit(\"_\"), $\"dst\"))\ndf1.show()\n\n","user":"mapr","dateUpdated":"2019-03-04T23:20:11+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df1: org.apache.spark.sql.DataFrame = [id: string, fldate: string ... 13 more fields]\n+--------------------+----------+-----+----+-------+---+---+----------+----------+--------+----------+--------+--------------+-----+---------+\n|                  id|    fldate|month|dofW|carrier|src|dst|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime| dist|orig_dest|\n+--------------------+----------+-----+----+-------+---+---+----------+----------+--------+----------+--------+--------------+-----+---------+\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|         9|       850|     0.0|      1116|     0.0|         146.0|946.0|  ATL_BOS|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        11|      1122|     8.0|      1349|     0.0|         147.0|946.0|  ATL_BOS|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        14|      1356|     9.0|      1623|     0.0|         147.0|946.0|  ATL_BOS|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        16|      1620|     0.0|      1851|     3.0|         151.0|946.0|  ATL_BOS|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        19|      1940|     6.0|      2210|     0.0|         150.0|946.0|  ATL_BOS|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        12|      1248|     0.0|      1513|     0.0|         145.0|946.0|  ATL_BOS|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        22|      2215|     0.0|        39|     0.0|         144.0|946.0|  ATL_BOS|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|BOS|        15|      1500|    21.0|      1734|    33.0|         154.0|946.0|  ATL_BOS|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     WN|ATL|BOS|        15|      1500|   198.0|      1725|   208.0|         145.0|946.0|  ATL_BOS|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     WN|ATL|BOS|        21|      2055|    14.0|      2330|     0.0|         155.0|946.0|  ATL_BOS|\n|ATL_BOS_2018-01-0...|2018-01-01|    1|   1|     WN|ATL|BOS|        10|      1015|   215.0|      1250|   191.0|         155.0|946.0|  ATL_BOS|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|        11|      1114|     0.0|      1238|     0.0|          84.0|226.0|  ATL_CLT|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|         8|       845|     0.0|      1011|     0.0|          86.0|226.0|  ATL_CLT|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|        15|      1548|     0.0|      1710|     0.0|          82.0|226.0|  ATL_CLT|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|         7|       705|     0.0|       821|     0.0|          76.0|226.0|  ATL_CLT|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|        12|      1226|     0.0|      1347|     0.0|          81.0|226.0|  ATL_CLT|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     AA|ATL|CLT|        22|      2205|     0.0|      2319|     1.0|          74.0|226.0|  ATL_CLT|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|CLT|        22|      2210|    11.0|      2324|     0.0|          74.0|226.0|  ATL_CLT|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|CLT|        15|      1543|     1.0|      1659|     0.0|          76.0|226.0|  ATL_CLT|\n|ATL_CLT_2018-01-0...|2018-01-01|    1|   1|     DL|ATL|CLT|        10|      1008|     0.0|      1124|     0.0|          76.0|226.0|  ATL_CLT|\n+--------------------+----------+-----+----+-------+---+---+----------+----------+--------+----------+--------+--------------+-----+---------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1551718401525_-836917529","id":"20171129-221736_959969733","dateCreated":"2019-03-04T16:53:21+0000","dateStarted":"2019-03-04T23:20:01+0000","dateFinished":"2019-03-04T23:20:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1318"},{"title":"Print DataFrame Schema","text":"df1.printSchema","user":"mapr","dateUpdated":"2019-03-04T23:21:06+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- id: string (nullable = true)\n |-- fldate: string (nullable = true)\n |-- month: integer (nullable = true)\n |-- dofW: integer (nullable = true)\n |-- carrier: string (nullable = true)\n |-- src: string (nullable = true)\n |-- dst: string (nullable = true)\n |-- crsdephour: integer (nullable = true)\n |-- crsdeptime: integer (nullable = true)\n |-- depdelay: double (nullable = true)\n |-- crsarrtime: integer (nullable = true)\n |-- arrdelay: double (nullable = true)\n |-- crselapsedtime: double (nullable = true)\n |-- dist: double (nullable = true)\n |-- orig_dest: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1551718401528_-525142381","id":"20171129-223643_463511351","dateCreated":"2019-03-04T16:53:21+0000","dateStarted":"2019-03-04T23:21:06+0000","dateFinished":"2019-03-04T23:21:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1319"},{"text":"%md\nThe describe() function performs summary statistics calculations on  numeric columns ","user":"mapr","dateUpdated":"2019-03-04T23:27:40+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The describe() function performs summary statistics calculations on numeric columns</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1551718401533_164839635","id":"20170524-214640_973339640","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1321","dateFinished":"2019-03-04T23:27:40+0000","dateStarted":"2019-03-04T23:27:40+0000"},{"title":"Perform summary statistics  on selected columns","text":"\ndf1.describe(\"dist\", \"crselapsedtime\",\"depdelay\", \"arrdelay\").show","user":"mapr","dateUpdated":"2019-03-04T23:20:11+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------------------+------------------+------------------+------------------+\n|summary|              dist|    crselapsedtime|          depdelay|          arrdelay|\n+-------+------------------+------------------+------------------+------------------+\n|  count|             41348|             41348|             41348|             41348|\n|   mean|1111.0529167069749|186.26264873754474|15.018719164167553|14.806907226468027|\n| stddev| 568.7941212507527| 68.38149648990012| 44.52963204436147| 44.22370513266625|\n|    min|             184.0|              64.0|               0.0|               0.0|\n|    max|            2704.0|             423.0|            1440.0|            1442.0|\n+-------+------------------+------------------+------------------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1551718401534_722833523","id":"20170524-083228_1459810795","dateCreated":"2019-03-04T16:53:21+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1322"},{"user":"mapr","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1551742047424_346800376","id":"20190304-232727_169697617","dateCreated":"2019-03-04T23:27:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9569","text":"%md\nIn the code below a Spark Bucketizer is used to split the dataset into delayed and not delayed flights with a delayed 0/1 column. \nThen the resulting total counts are displayed. ","dateUpdated":"2019-03-04T23:28:48+0000","dateFinished":"2019-03-04T23:28:48+0000","dateStarted":"2019-03-04T23:28:48+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In the code below a Spark Bucketizer is used to split the dataset into delayed and not delayed flights with a delayed 0/1 column.<br/>Then the resulting total counts are displayed.</p>\n</div>"}]}},{"title":"Add Column for Delayed Flights  (depdelay > 40) and count","text":"// bucket > 40 minutes = delayed\nval delaybucketizer = new Bucketizer().setInputCol(\"depdelay\").setOutputCol(\"delayed\").setSplits(Array(0.0,41.0,Double.PositiveInfinity))\nval df2= delaybucketizer.transform(df1)\ndf2.cache\ndf2.groupBy(\"delayed\").count.show","user":"mapr","dateUpdated":"2019-03-04T23:28:59+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"delaybucketizer: org.apache.spark.ml.feature.Bucketizer = bucketizer_3d36aba94789\ndf2: org.apache.spark.sql.DataFrame = [id: string, fldate: string ... 14 more fields]\nres22: df2.type = [id: string, fldate: string ... 14 more fields]\n+-------+------+\n|delayed| count|\n+-------+------+\n|    0.0|253309|\n|    1.0| 29319|\n+-------+------+\n\n"}]},"apps":[],"jobName":"paragraph_1551718401535_-1605435075","id":"20170524-093402_1430077788","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1323","dateFinished":"2019-03-04T23:29:05+0000","dateStarted":"2019-03-04T23:28:59+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Register Dataset as a Temporary View in order to explore with SQL","text":"df2.createOrReplaceTempView(\"flights\")\nspark.catalog.cacheTable(\"flights\")","user":"mapr","dateUpdated":"2019-03-04T23:29:14+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"stackedAreaChart":{}},"commonSetting":{},"keys":[{"name":"churn","index":19,"aggr":"sum"}],"groups":[],"values":[{"name":"len","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1551718401537_-1791183673","id":"20170508-150408_505244914","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1324","dateFinished":"2019-03-04T23:29:16+0000","dateStarted":"2019-03-04T23:29:15+0000"},{"text":"%md \n# Use Spark SQL to explore the dataset","user":"mapr","dateUpdated":"2019-03-04T23:29:21+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Use Spark SQL to explore the dataset</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1551718401538_771898216","id":"20170603-182655_1680505289","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1325","dateFinished":"2019-03-04T23:29:21+0000","dateStarted":"2019-03-04T23:29:21+0000"},{"title":"Top 5 Longest departure delays","text":"%sql \nselect carrier,src, dst, depdelay,crsdephour, dist, dofW\nfrom flights \norder by depdelay desc limit 5 \n","user":"mapr","dateUpdated":"2019-03-04T23:29:46+0000","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"carrier":"string","src":"string","dst":"string","depdelay":"string","crsdephour":"string","dist":"string","dofW":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tsrc\tdst\tdepdelay\tcrsdephour\tdist\tdofW\nAA\tIAH\tMIA\t1559.0\t11\t964.0\t5\nAA\tIAH\tDFW\t1445.0\t18\t224.0\t3\nAA\tBOS\tDFW\t1345.0\t10\t1562.0\t4\nUA\tBOS\tORD\t1334.0\t9\t867.0\t4\nAA\tLAX\tMIA\t1283.0\t9\t2342.0\t1\n"}]},"apps":[],"jobName":"paragraph_1551718401539_-1626723744","id":"20171110-195321_1924356975","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1326","dateFinished":"2019-03-04T23:29:45+0000","dateStarted":"2019-03-04T23:29:43+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Average Departure Delay by Carrier","text":"%sql select carrier, avg(depdelay)\nfrom flights\ngroup by carrier","user":"mapr","dateUpdated":"2019-03-04T23:30:06+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"carrier","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"avg(depdelay)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tavg(depdelay)\nUA\t14.442583200307139\nAA\t14.129090626627798\nDL\t14.26168914855228\nWN\t17.70183428999251\n"}]},"apps":[],"jobName":"paragraph_1551718401541_-645329349","id":"20171110-195759_439800395","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1327","dateFinished":"2019-03-04T23:30:06+0000","dateStarted":"2019-03-04T23:30:04+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Maximum Departure Delay by Carrier","text":"%sql\nselect carrier, max(depdelay)\nfrom flights\ngroup by carrier","user":"mapr","dateUpdated":"2019-03-04T23:30:16+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"carrier","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"max(depdelay)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tmax(depdelay)\nUA\t1334.0\nAA\t1559.0\nDL\t1159.0\nWN\t479.0\n"}]},"apps":[],"jobName":"paragraph_1551718401542_-1736405788","id":"20171129-194230_774307118","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1328","dateFinished":"2019-03-04T23:30:16+0000","dateStarted":"2019-03-04T23:30:14+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Average Departure Delay by Destination Airport","text":"%sql\nSELECT dst, avg(depdelay) as avgdelay\nFROM flights \nGROUP BY dst\nORDER BY avgdelay desc","user":"mapr","dateUpdated":"2019-03-04T23:32:33+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"dst":"string","avgdelay":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"dst","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"avgdelay","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dst\tavgdelay\nEWR\t20.729607250755286\nSFO\t17.047248322147652\nLGA\t15.613878829401978\nBOS\t15.00700909577314\nORD\t14.846011016896702\nMIA\t14.371604732544576\nDFW\t13.946526636469315\nATL\t13.797100969652844\nLAX\t13.445941419479698\nSEA\t13.097595473833097\nDEN\t12.767347642444618\nIAH\t11.743971267316573\nCLT\t11.370676826001548\n"}]},"apps":[],"jobName":"paragraph_1551718401544_1958651398","id":"20171122-204956_303346727","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1329","dateFinished":"2019-03-04T23:30:40+0000","dateStarted":"2019-03-04T23:30:39+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Average Departure Delay by Originating Airport","text":"%sql\nSELECT src, avg(depdelay) as avgdelay\nFROM flights \nGROUP BY src\nORDER BY avgdelay desc","user":"mapr","dateUpdated":"2019-03-04T23:32:43+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"src","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"avgdelay","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"src\tavgdelay\nEWR\t17.818079459546404\nMIA\t17.768691978431264\nORD\t16.5199551010227\nATL\t15.330084535057185\nDFW\t15.061909338459074\nDEN\t14.192011960700555\nCLT\t14.081517835767297\nIAH\t13.804911168948738\nSFO\t13.792674746209919\nLGA\t13.586563812127721\nBOS\t12.940644675240812\nLAX\t11.223347230494342\nSEA\t10.140899425061038\n"}]},"apps":[],"jobName":"paragraph_1551718401545_311882174","id":"20171122-204822_1853914961","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1330","dateFinished":"2019-03-04T23:32:09+0000","dateStarted":"2019-03-04T23:32:08+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Average Departure Delay by Day of the Week","text":"%sql\nSELECT dofW, avg(depdelay) as avgdelay\nFROM flights \nGROUP BY dofW\nORDER BY avgdelay desc","user":"mapr","dateUpdated":"2019-03-04T23:33:00+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"dofW","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"avgdelay","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dofW\tavgdelay\n4\t15.669740908010459\n5\t15.2334596464801\n7\t15.099199497724062\n2\t15.018067648637924\n1\t15.01703501248763\n3\t13.648878122782548\n6\t10.89556313993174\n"}]},"apps":[],"jobName":"paragraph_1551718401546_629287130","id":"20171122-205057_803943925","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1331","dateFinished":"2019-03-04T23:33:00+0000","dateStarted":"2019-03-04T23:32:59+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Count of Departure Delays by Day of the Week (1=Monday, 7=Sunday)","text":"%sql\nselect dofW, count(depdelay)\nfrom flights where depdelay > 40\ngroup by dofW\n","user":"mapr","dateUpdated":"2019-03-04T23:33:13+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"dofW","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"count(depdelay)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dofW\tcount(depdelay)\n1\t4680\n6\t2598\n3\t3986\n5\t4677\n4\t4809\n7\t4163\n2\t4406\n"}]},"apps":[],"jobName":"paragraph_1551718401548_324853469","id":"20171123-101016_2040441762","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1332","dateFinished":"2019-03-04T23:33:12+0000","dateStarted":"2019-03-04T23:33:11+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Count of Departure Delays by Carrier (where delay>40 minutes)","text":"%sql\nselect carrier, count(delayed)\nfrom flights where delayed = 1\ngroup by carrier\norder by carrier","user":"mapr","dateUpdated":"2019-03-04T23:33:36+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"carrier","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tcount(delayed)\nAA\t11570\nDL\t5354\nUA\t10297\nWN\t2098\n"}]},"apps":[],"jobName":"paragraph_1551718401549_-840219147","id":"20171123-042011_1532799341","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1333","dateFinished":"2019-03-04T23:33:26+0000","dateStarted":"2019-03-04T23:33:25+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Count of Delayed Not Delayed  by Carrier","text":"%sql\nSELECT delayed, count(delayed),carrier\nFROM flights\nGROUP BY carrier, delayed\norder by carrier\n","user":"mapr","dateUpdated":"2019-03-04T23:33:47+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":false,"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"carrier","index":2,"aggr":"sum"}],"groups":[{"name":"delayed","index":0,"aggr":"sum"}],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"delayed\tcount(delayed)\tcarrier\n1.0\t11570\tAA\n0.0\t97857\tAA\n1.0\t5354\tDL\n0.0\t52841\tDL\n0.0\t88681\tUA\n1.0\t10297\tUA\n1.0\t2098\tWN\n0.0\t13930\tWN\n"}]},"apps":[],"jobName":"paragraph_1551718401550_767194483","id":"20170524-144751_554129160","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1334","dateFinished":"2019-03-04T23:33:47+0000","dateStarted":"2019-03-04T23:33:46+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Count of Departure Delays by Hour of Day","text":"%sql\nselect crsdephour, count(depdelay)\nfrom flights where depdelay > 40\ngroup by crsdephour\n","user":"mapr","dateUpdated":"2019-03-04T23:33:54+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"crsdephour","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"count(depdelay)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"crsdephour\tcount(depdelay)\n12\t1893\n22\t1066\n1\t51\n13\t1728\n16\t2309\n6\t518\n20\t2260\n5\t175\n19\t2198\n15\t1969\n17\t2434\n9\t1112\n8\t1067\n23\t364\n7\t1068\n10\t1472\n24\t58\n21\t1180\n11\t1321\n14\t2041\n0\t106\n18\t2929\n"}]},"apps":[],"jobName":"paragraph_1551718401552_-1487591361","id":"20171129-200107_756396508","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1335","dateFinished":"2019-03-04T23:33:54+0000","dateStarted":"2019-03-04T23:33:53+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Count of Delayed , Not Delayed by Hour","text":"%sql\nSELECT delayed, count(delayed),crsdephour\nFROM flights\nGROUP BY crsdephour, delayed\norder by delayed","user":"mapr","dateUpdated":"2019-03-04T23:34:03+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":false,"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"crsdephour","index":2,"aggr":"sum"}],"groups":[{"name":"delayed","index":0,"aggr":"sum"}],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"delayed\tcount(delayed)\tcrsdephour\n0.0\t10871\t19\n0.0\t14940\t11\n0.0\t2705\t23\n0.0\t1499\t0\n0.0\t7242\t22\n0.0\t16790\t12\n0.0\t17001\t8\n0.0\t17327\t10\n0.0\t10675\t20\n0.0\t13895\t13\n0.0\t15123\t14\n0.0\t6511\t21\n0.0\t22365\t7\n0.0\t14966\t18\n0.0\t1017\t24\n0.0\t16660\t6\n0.0\t14946\t9\n0.0\t18\t2\n0.0\t14661\t16\n0.0\t1217\t1\n0.0\t13302\t15\n0.0\t6090\t5\n0.0\t13488\t17\n1.0\t1112\t9\n1.0\t1893\t12\n1.0\t2260\t20\n1.0\t2198\t19\n1.0\t364\t23\n1.0\t2929\t18\n1.0\t1321\t11\n1.0\t1180\t21\n1.0\t1728\t13\n1.0\t2434\t17\n1.0\t1067\t8\n1.0\t2041\t14\n1.0\t1068\t7\n1.0\t51\t1\n1.0\t518\t6\n1.0\t1969\t15\n1.0\t58\t24\n1.0\t175\t5\n1.0\t1066\t22\n1.0\t2309\t16\n1.0\t106\t0\n1.0\t1472\t10\n"}]},"apps":[],"jobName":"paragraph_1551718401553_-1149286903","id":"20170524-095127_757444423","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1336","dateFinished":"2019-03-04T23:34:03+0000","dateStarted":"2019-03-04T23:34:02+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Count of Departure Delays by Originating Airport","text":"%sql\nSELECT delayed, count(delayed),src\nFROM flights\nGROUP BY src, delayed\norder by  src\n","user":"mapr","dateUpdated":"2019-03-04T23:37:11+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"pieChart":{},"multiBarChart":{"stacked":false,"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"src","index":2,"aggr":"sum"}],"groups":[{"name":"delayed","index":0,"aggr":"sum"}],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"delayed\tcount(delayed)\tsrc\n1.0\t3106\tATL\n0.0\t27059\tATL\n1.0\t1711\tBOS\n0.0\t16872\tBOS\n1.0\t1755\tCLT\n0.0\t14953\tCLT\n0.0\t21106\tDEN\n1.0\t2304\tDEN\n1.0\t2782\tDFW\n0.0\t22190\tDFW\n1.0\t2328\tEWR\n0.0\t16323\tEWR\n0.0\t15845\tIAH\n1.0\t1829\tIAH\n0.0\t24738\tLAX\n1.0\t2126\tLAX\n1.0\t1944\tLGA\n0.0\t18538\tLGA\n0.0\t15695\tMIA\n1.0\t2294\tMIA\n0.0\t28039\tORD\n1.0\t4033\tORD\n0.0\t11851\tSEA\n1.0\t846\tSEA\n1.0\t2261\tSFO\n0.0\t20100\tSFO\n"}]},"apps":[],"jobName":"paragraph_1551718401555_-1416720468","id":"20171110-211045_792848918","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1338","dateFinished":"2019-03-04T23:36:18+0000","dateStarted":"2019-03-04T23:36:17+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Count of Departure Delays by Destination","text":"%sql\nselect dst, count(delayed)\nfrom flights where delayed = 1\ngroup by dst\nORDER BY dst\n","user":"mapr","dateUpdated":"2019-03-04T23:38:11+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"dst","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dst\tcount(delayed)\nATL\t2759\nBOS\t2078\nCLT\t1390\nDEN\t2171\nDFW\t2471\nEWR\t2796\nIAH\t1468\nLAX\t2480\nLGA\t2363\nMIA\t1741\nORD\t3465\nSEA\t1191\nSFO\t2946\n"}]},"apps":[],"jobName":"paragraph_1551718401557_1729681330","id":"20171123-102221_687729087","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1339","dateFinished":"2019-03-04T23:37:43+0000","dateStarted":"2019-03-04T23:37:42+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Count of Delayed not Delayed by Destination","text":"%sql\nSELECT delayed, count(delayed),dst\nFROM flights\nGROUP BY dst, delayed\norder by dst","user":"mapr","dateUpdated":"2019-03-04T23:38:49+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"dst","index":2,"aggr":"sum"}],"groups":[{"name":"delayed","index":0,"aggr":"sum"}],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"delayed\tcount(delayed)\tdst\n1.0\t2759\tATL\n0.0\t27458\tATL\n1.0\t2078\tBOS\n0.0\t16612\tBOS\n1.0\t1390\tCLT\n0.0\t15409\tCLT\n0.0\t21031\tDEN\n1.0\t2171\tDEN\n0.0\t22476\tDFW\n1.0\t2471\tDFW\n0.0\t15740\tEWR\n1.0\t2796\tEWR\n0.0\t16073\tIAH\n1.0\t1468\tIAH\n0.0\t24389\tLAX\n1.0\t2480\tLAX\n0.0\t18071\tLGA\n1.0\t2363\tLGA\n0.0\t16262\tMIA\n1.0\t1741\tMIA\n1.0\t3465\tORD\n0.0\t28849\tORD\n0.0\t11535\tSEA\n1.0\t1191\tSEA\n1.0\t2946\tSFO\n0.0\t19404\tSFO\n"}]},"apps":[],"jobName":"paragraph_1551718401558_1354619498","id":"20171122-211508_2036968500","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1340","dateFinished":"2019-03-04T23:38:41+0000","dateStarted":"2019-03-04T23:38:40+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Count of Departure Delays by Origin, Destination","text":"%sql\nselect src, dst, count(depdelay)\nfrom flights where depdelay > 40\ngroup by src, dst\nORDER BY count(depdelay) desc\n","user":"mapr","dateUpdated":"2019-03-04T23:39:40+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"src","index":0,"aggr":"sum"}],"groups":[{"name":"dst","index":1,"aggr":"sum"}],"values":[{"name":"count(depdelay)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"src\tdst\tcount(depdelay)\nORD\tLGA\t588\nLAX\tSFO\t578\nATL\tEWR\t561\nLGA\tORD\t532\nORD\tSFO\t470\nSFO\tLAX\t463\nATL\tLGA\t445\nORD\tLAX\t425\nORD\tDFW\t423\nDEN\tSFO\t388\nEWR\tATL\t381\nDFW\tORD\t377\nMIA\tLGA\t355\nORD\tEWR\t347\nLGA\tATL\t344\nSFO\tORD\t343\nDFW\tATL\t328\nORD\tATL\t326\nORD\tBOS\t318\nDEN\tLAX\t311\nLAX\tDEN\t303\nORD\tDEN\t302\nSFO\tDEN\t299\nMIA\tATL\t299\nLAX\tORD\t298\nEWR\tORD\t297\nATL\tDFW\t293\nBOS\tLGA\t279\nLGA\tBOS\t276\nDEN\tEWR\t275\nATL\tLAX\t275\nATL\tORD\t273\nDFW\tSFO\t269\nBOS\tEWR\t269\nIAH\tEWR\t269\nBOS\tORD\t267\nDEN\tORD\t265\nIAH\tDFW\t264\nMIA\tORD\t262\nMIA\tDFW\t259\nEWR\tSFO\t257\nCLT\tEWR\t255\nEWR\tBOS\t255\nDFW\tIAH\t255\nATL\tMIA\t255\nLGA\tMIA\t248\nATL\tBOS\t243\nORD\tSEA\t232\nDFW\tDEN\t222\nDFW\tMIA\t217\nORD\tIAH\t217\nDFW\tLAX\t216\nSFO\tEWR\t214\nDFW\tLGA\t214\nCLT\tORD\t213\nORD\tMIA\t212\nSFO\tDFW\t202\nEWR\tLAX\t202\nLAX\tATL\t201\nMIA\tEWR\t201\nDFW\tEWR\t200\nIAH\tSFO\t199\nDEN\tDFW\t198\nMIA\tLAX\t198\nBOS\tATL\t198\nSFO\tSEA\t196\nATL\tDEN\t192\nSEA\tSFO\t191\nIAH\tORD\t189\nEWR\tMIA\t188\nCLT\tATL\t186\nATL\tSFO\t185\nDFW\tCLT\t185\nDEN\tLGA\t184\nLGA\tDEN\t182\nCLT\tBOS\t181\nEWR\tDEN\t178\nMIA\tBOS\t178\nEWR\tIAH\t177\nDFW\tSEA\t174\nLAX\tDFW\t174\nMIA\tCLT\t174\nORD\tCLT\t173\nATL\tCLT\t170\nSFO\tBOS\t165\nDEN\tATL\t164\nMIA\tSFO\t164\nEWR\tCLT\t162\nLGA\tDFW\t162\nEWR\tDFW\t159\nCLT\tDFW\t155\nDEN\tSEA\t155\nIAH\tLGA\t151\nSEA\tORD\t149\nCLT\tLGA\t147\nCLT\tMIA\t144\nLAX\tEWR\t140\nIAH\tDEN\t139\nIAH\tLAX\t136\nIAH\tATL\t136\nSFO\tATL\t128\nSEA\tDEN\t126\nLAX\tMIA\t126\nCLT\tSFO\t125\nDFW\tBOS\t125\nLGA\tCLT\t124\nATL\tIAH\t124\nMIA\tIAH\t123\nSFO\tIAH\t122\nDEN\tIAH\t120\nBOS\tSFO\t120\nBOS\tCLT\t116\nLAX\tBOS\t114\nBOS\tLAX\t113\nDEN\tBOS\t112\nCLT\tDEN\t106\nBOS\tMIA\t97\nSEA\tDFW\t97\nIAH\tMIA\t94\nCLT\tLAX\t93\nIAH\tBOS\t90\nATL\tSEA\t90\nIAH\tCLT\t86\nCLT\tIAH\t86\nBOS\tDFW\t85\nBOS\tDEN\t81\nIAH\tSEA\t76\nLGA\tIAH\t76\nEWR\tSEA\t72\nSFO\tMIA\t70\nLAX\tSEA\t69\nSEA\tATL\t68\nDEN\tCLT\t67\nLAX\tCLT\t65\nDEN\tMIA\t65\nSEA\tEWR\t65\nCLT\tSEA\t64\nBOS\tIAH\t63\nSFO\tCLT\t59\nLAX\tIAH\t58\nSEA\tLAX\t48\nSEA\tIAH\t47\nMIA\tDEN\t41\nMIA\tSEA\t40\nSEA\tMIA\t25\nBOS\tSEA\t23\nSEA\tBOS\t21\nSEA\tCLT\t9\n"}]},"apps":[],"jobName":"paragraph_1551718401559_1052442003","id":"20171123-102627_1669385618","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1341","dateFinished":"2019-03-04T23:39:32+0000","dateStarted":"2019-03-04T23:39:31+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"text":"%md\nStratified Sampling\nIn order to ensure that our model is sensitive to the delayed samples we can put the two sample types on the same footing using stratified sampling. The DataFrames sampleBy() function does this when provided with fractions of each sample type to be returned. Here, we're keeping all instances of delayed, but downsampling the not delayed instances to 29%, then displaying the results\n","user":"mapr","dateUpdated":"2019-03-04T23:40:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1551742825132_712364927","id":"20190304-234025_337414504","dateCreated":"2019-03-04T23:40:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:14013","dateFinished":"2019-03-04T23:40:40+0000","dateStarted":"2019-03-04T23:40:40+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Stratified Sampling<br/>In order to ensure that our model is sensitive to the delayed samples we can put the two sample types on the same footing using stratified sampling. The DataFrames sampleBy() function does this when provided with fractions of each sample type to be returned. Here, we&rsquo;re keeping all instances of delayed, but downsampling the not delayed instances to 29%, then displaying the results</p>\n</div>"}]}},{"title":"Stratify the sampling to fewer Not Delayed","text":"// keep all delayed , keep 13% not delayed\nval fractions = Map(0.0 -> .13, 1.0->1.0) // \nval df3 =df2.stat.sampleBy(\"delayed\", fractions, 36L)\ndf2.groupBy(\"delayed\").count.show\ndf3.groupBy(\"delayed\").count.show","user":"mapr","dateUpdated":"2019-03-04T23:44:45+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"fractions: scala.collection.immutable.Map[Double,Double] = Map(0.0 -> 0.13, 1.0 -> 1.0)\ndf3: org.apache.spark.sql.DataFrame = [id: string, fldate: string ... 14 more fields]\n+-------+------+\n|delayed| count|\n+-------+------+\n|    0.0|253309|\n|    1.0| 29319|\n+-------+------+\n\n+-------+-----+\n|delayed|count|\n+-------+-----+\n|    0.0|32820|\n|    1.0|29319|\n+-------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1551718401560_434734902","id":"20171123-050717_1328190278","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1342","dateFinished":"2019-03-04T23:44:48+0000","dateStarted":"2019-03-04T23:44:45+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"user":"mapr","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1551743093155_1972649895","id":"20190304-234453_30142897","dateCreated":"2019-03-04T23:44:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:14355","text":"val splitSeed = 5043\nval Array(trainingData, testData) = df3.randomSplit(Array(0.7, 0.3), splitSeed)\ntrainingData.groupBy(\"delayed\").count.show","dateUpdated":"2019-03-04T23:45:17+0000","dateFinished":"2019-03-04T23:45:20+0000","dateStarted":"2019-03-04T23:45:17+0000","title":"Split into training and test data","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"splitSeed: Int = 5043\ntrainingData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, fldate: string ... 14 more fields]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, fldate: string ... 14 more fields]\n+-------+-----+\n|delayed|count|\n+-------+-----+\n|    0.0|23037|\n|    1.0|20602|\n+-------+-----+\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"user":"mapr","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1551743216529_-1935391512","id":"20190304-234656_1329349451","dateCreated":"2019-03-04T23:46:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:14516","text":"%md\nIn order for the features to be used by a machine learning algorithm, they must be transformed and put into Feature Vectors, which are vectors of numbers \nrepresenting the value for each feature.\n<img src=\"https://mapr.com/blog/fast-data-processing-pipeline-predicting-flight-delays-using-apache-apis-pt-1/assets/reference-learning-spark.png\">\nSpark ML provides a uniform set of high-level APIs built on top of DataFrames. We will use an ML Pipeline to pass the data through transformers in order to extract the features and an estimator to produce the model.\n<img src=\"https://mapr.com/blog/fast-data-processing-pipeline-predicting-flight-delays-using-apache-apis-pt-1/assets/ml-pipeline.png\">\nTransformer: A Transformer is an algorithm which transforms one DataFrame into another DataFrame. We will use a transformer to get a DataFrame with a features vector column.\nEstimator: An Estimator is an algorithm which can be fit on a DataFrame to produce a Transformer. We will use a an estimator to train a model which can transform data to get predictions.\nPipeline: A Pipeline chains multiple Transformers and Estimators together to specify a ML workflow.","dateUpdated":"2019-03-04T23:50:30+0000","dateFinished":"2019-03-04T23:50:30+0000","dateStarted":"2019-03-04T23:50:30+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In order for the features to be used by a machine learning algorithm, they must be transformed and put into Feature Vectors, which are vectors of numbers<br/>representing the value for each feature.<br/><img src=\"https://mapr.com/blog/fast-data-processing-pipeline-predicting-flight-delays-using-apache-apis-pt-1/assets/reference-learning-spark.png\"><br/>Spark ML provides a uniform set of high-level APIs built on top of DataFrames. We will use an ML Pipeline to pass the data through transformers in order to extract the features and an estimator to produce the model.<br/><img src=\"https://mapr.com/blog/fast-data-processing-pipeline-predicting-flight-delays-using-apache-apis-pt-1/assets/ml-pipeline.png\"><br/>Transformer: A Transformer is an algorithm which transforms one DataFrame into another DataFrame. We will use a transformer to get a DataFrame with a features vector column.<br/>Estimator: An Estimator is an algorithm which can be fit on a DataFrame to produce a Transformer. We will use a an estimator to train a model which can transform data to get predictions.<br/>Pipeline: A Pipeline chains multiple Transformers and Estimators together to specify a ML workflow.</p>\n</div>"}]}},{"text":"%md\n## Feature Extraction and Pipelining\nThe ML package needs the label and feature vector to be added as columns to the input dataframe. We set up a pipeline to pass the data through transformers in order to extract the features and label. \nA StringIndexer is used to to encode a string columns to a column of number indices.\nA Bucketizer is used to add a label of delayed 0/1. \nA VectorAssembler combines a given list of columns into a single feature vector column.\n","user":"mapr","dateUpdated":"2019-03-04T23:56:53+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Feature Extraction and Pipelining</h2>\n<p>The ML package needs the label and feature vector to be added as columns to the input dataframe. We set up a pipeline to pass the data through transformers in order to extract the features and label.<br/>A StringIndexer is used to to encode a string columns to a column of number indices.<br/>A Bucketizer is used to add a label of delayed 0/1.<br/>A VectorAssembler combines a given list of columns into a single feature vector column.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1551718401561_-1069180776","id":"20170603-184811_78732818","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1343","dateFinished":"2019-03-04T23:56:53+0000","dateStarted":"2019-03-04T23:56:53+0000"},{"title":"Use a StringIndexer  to encode categorical columns","text":"// categorical Column names\nval categoricalColumns = Array(\"carrier\", \"src\", \"dst\", \"dofW\", \"orig_dest\")\n\n// String Indexers will encode string categorial columns into a column numeric indices\nval stringIndexers = categoricalColumns.map { colName =>\n      new StringIndexer()\n        .setInputCol(colName)\n        .setOutputCol(colName + \"Indexed\")\n        .fit(trainingData)\n}\n","user":"mapr","dateUpdated":"2019-03-04T23:53:23+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"categoricalColumns: Array[String] = Array(carrier, src, dst, dofW, orig_dest)\nstringIndexers: Array[org.apache.spark.ml.feature.StringIndexerModel] = Array(strIdx_2cec947576d2, strIdx_5fe5c5b68cec, strIdx_6b27d2580ee2, strIdx_db63907274d6, strIdx_4ef5fd28122a)\n"}]},"apps":[],"jobName":"paragraph_1551718401563_-1488229786","id":"20170508-150543_958647761","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1344","dateFinished":"2019-03-04T23:53:28+0000","dateStarted":"2019-03-04T23:53:23+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"title":"Use VectorAssembler, a transformer,  to put features into a feature vector column","text":"\n//a Bucketizer is used to add a label column of delayed 0/1.\nval labeler = new Bucketizer().setInputCol(\"depdelay\").setOutputCol(\"label\").setSplits(Array( 0.0, 40.0, Double.PositiveInfinity))\n\nval featureCols = Array(\"carrierIndexed\", \"dstIndexed\", \"srcIndexed\", \"dofWIndexed\", \"orig_destIndexed\",\"crsdephour\", \"crsdeptime\", \"crsarrtime\",\"crselapsedtime\", \"dist\")\n\n//The VectorAssembler combines a given list of columns into a single feature vector column. \nval assembler = new VectorAssembler().setInputCols(featureCols).setOutputCol(\"features\")\n","user":"mapr","dateUpdated":"2019-03-05T00:02:58+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"labeler: org.apache.spark.ml.feature.Bucketizer = bucketizer_39f8528a4abf\nfeatureCols: Array[String] = Array(carrierIndexed, dstIndexed, srcIndexed, dofWIndexed, orig_destIndexed, crsdephour, crsdeptime, crsarrtime, crselapsedtime, dist)\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_f07f8d04c46c\n"}]},"apps":[],"jobName":"paragraph_1551718401564_482489910","id":"20170524-223310_2121058884","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1345","dateFinished":"2019-03-05T00:02:59+0000","dateStarted":"2019-03-05T00:02:58+0000"},{"title":"Create Random Forest Estimator , set Label and Feature Columns ","text":"// The final element in our pipeline is an estimator (a random forest classifier), training on the vector of labels and features.\nval rf = new RandomForestClassifier().setLabelCol(\"label\").setFeaturesCol(\"features\").setNumTrees(20).setMaxBins(7000).setMaxDepth(10)  ","user":"mapr","dateUpdated":"2019-03-05T00:03:03+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rf: org.apache.spark.ml.classification.RandomForestClassifier = rfc_455242997c82\n"}]},"apps":[],"jobName":"paragraph_1551718401565_925916407","id":"20170603-185445_276463997","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1346","dateFinished":"2019-03-05T00:03:03+0000","dateStarted":"2019-03-05T00:03:03+0000"},{"text":"%md\n## Setup Spark ML pipeline stages\nSet up a pipeline to pass the data through transformers to extract the features and label, and pass this to a random forest estimator to fit the model \n\n","user":"mapr","dateUpdated":"2019-03-04T23:59:54+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Setup Spark ML pipeline stages</h2>\n<p>Set up a pipeline to pass the data through transformers to extract the features and label, and pass this to a random forest estimator to fit the model</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1551718401567_1389271928","id":"20170601-154525_1033166149","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1347","dateFinished":"2019-03-04T23:59:54+0000","dateStarted":"2019-03-04T23:59:54+0000"},{"title":"Set up pipeline with  feature transformers and model estimator","text":"// Below we chain the stringindexers, vector assembler and randomforest in a Pipeline.\nval steps = stringIndexers ++ Array(labeler, assembler, rf)\nval pipeline = new Pipeline().setStages(steps)\n","user":"mapr","dateUpdated":"2019-03-05T00:03:07+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"steps: Array[org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.MLWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.MLWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.MLWritable}}] = Array(strIdx_2cec947576d2, strIdx_5fe5c5b68cec, strIdx_6b27d2580ee2, strIdx_db63907274d6, strIdx_4ef5fd28122a, bucketizer_39f8528a4abf, vecAssembler_f07f8d04c46c, rfc_455242997c82)\npipeline: org.apache.spark.ml.Pipeline = pipeline_27e0a73002c0\n"}]},"apps":[],"jobName":"paragraph_1551718401568_-1770300236","id":"20170508-151557_1422077156","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1348","dateFinished":"2019-03-05T00:03:08+0000","dateStarted":"2019-03-05T00:03:07+0000"},{"title":"Train the Model","text":"val model = pipeline.fit(trainingData)","user":"mapr","dateUpdated":"2019-03-05T00:03:12+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model: org.apache.spark.ml.PipelineModel = pipeline_27e0a73002c0\n"}]},"apps":[],"jobName":"paragraph_1551718401572_-745328234","id":"20171129-113112_994877662","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1351","dateFinished":"2019-03-05T00:03:27+0000","dateStarted":"2019-03-05T00:03:12+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"text":"// Print out the feature importances\nval rfm = model.stages.last.asInstanceOf[RandomForestClassificationModel]\nval featureImportances =rfm.featureImportances\nassembler.getInputCols.zip(featureImportances.toArray).sortBy(-_._2).foreach { case (feat, imp) => println(s\"feature: $feat, importance: $imp\") }","user":"mapr","dateUpdated":"2019-03-05T00:04:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rfm: org.apache.spark.ml.classification.RandomForestClassificationModel = RandomForestClassificationModel (uid=rfc_455242997c82) with 20 trees\nfeatureImportances: org.apache.spark.ml.linalg.Vector = (10,[0,1,2,3,4,5,6,7,8,9],[0.022026621212091053,0.041764392321269064,0.03699850504455595,0.09253194315726349,0.1922132900542742,0.07993036163345589,0.25054281744543455,0.1747984570487525,0.08160101077421204,0.027592601308691476])\nfeature: crsdeptime, importance: 0.25054281744543455\nfeature: orig_destIndexed, importance: 0.1922132900542742\nfeature: crsarrtime, importance: 0.1747984570487525\nfeature: dofWIndexed, importance: 0.09253194315726349\nfeature: crselapsedtime, importance: 0.08160101077421204\nfeature: crsdephour, importance: 0.07993036163345589\nfeature: dstIndexed, importance: 0.041764392321269064\nfeature: srcIndexed, importance: 0.03699850504455595\nfeature: dist, importance: 0.027592601308691476\nfeature: carrierIndexed, importance: 0.022026621212091053\n"}]},"apps":[],"jobName":"paragraph_1551718401573_491098903","id":"20171122-232203_359528816","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1352","dateFinished":"2019-03-05T00:04:27+0000","dateStarted":"2019-03-05T00:04:25+0000"},{"text":"%md\r\n## Evaluate the model on a test set\r\nThe actual performance of the model can be determined using the test data set which has not been used for any training. We'll transform the test set with the model pipeline, which will map the features according to the same recipe. \r\n","user":"mapr","dateUpdated":"2019-03-05T00:05:29+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Evaluate the model on a test set</h2>\n<p>The actual performance of the model can be determined using the test data set which has not been used for any training. We&rsquo;ll transform the test set with the model pipeline, which will map the features according to the same recipe.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1551718401576_2063229270","id":"20170602-155317_1487132664","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1354","dateFinished":"2019-03-05T00:05:29+0000","dateStarted":"2019-03-05T00:05:29+0000"},{"title":"Get Predictions from Test data","text":"//transform the test set with the model pipeline,\n//which will map the features according to the same recipe\nval predictions = model.transform(testData)","user":"mapr","dateUpdated":"2019-03-05T00:05:54+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"predictions: org.apache.spark.sql.DataFrame = [id: string, fldate: string ... 24 more fields]\n"}]},"apps":[],"jobName":"paragraph_1551718401577_-1252533057","id":"20170508-155848_1997894070","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1355","dateFinished":"2019-03-05T00:05:55+0000","dateStarted":"2019-03-05T00:05:54+0000"},{"text":"%md\nAccuracy is measured by the area under the ROC curve. The area measures the ability of the test to correctly classify true positives from false positives. A random predictor would have .5 accuracy. The closer the value is to 1 the better its predictions are. \n\n","user":"mapr","dateUpdated":"2019-03-05T00:06:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Accuracy is measured by the area under the ROC curve. The area measures the ability of the test to correctly classify true positives from false positives. A random predictor would have .5 accuracy. The closer the value is to 1 the better its predictions are.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1551718401578_-1829069143","id":"20170602-161538_1648758337","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1356","dateFinished":"2019-03-05T00:06:03+0000","dateStarted":"2019-03-05T00:06:03+0000"},{"title":"Evaluate the predictions accuracy","text":"val evaluator = new BinaryClassificationEvaluator()  \nval areaUnderROC = evaluator.evaluate(predictions)\nprintln(\"areaUnderROC \"  + areaUnderROC)\n","user":"mapr","dateUpdated":"2019-03-05T00:06:32+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"evaluator: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_1553a805d62c\nareaUnderROC: Double = 0.680372289712157\nareaUnderROC 0.680372289712157\n"}]},"apps":[],"jobName":"paragraph_1551718401579_567137995","id":"20170602-155622_1453197792","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1357","dateFinished":"2019-03-05T00:06:35+0000","dateStarted":"2019-03-05T00:06:32+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"user":"mapr","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1551744520458_271013935","id":"20190305-000840_256670702","dateCreated":"2019-03-05T00:08:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15467","text":"%md\nBelow, we calculate some more metrics. The number of false/true positive and negative predictions is also useful:\n\nTrue positives are how often the model correctly predicted delayed flights.\nFalse positives are how often the model incorrectly predicted delayed flights.\nTrue negatives indicate how often the model correctly predicted not delayed flights.\nFalse negatives indicate how often the model incorrectly predicted not delayed flights.","dateUpdated":"2019-03-05T00:08:52+0000","dateFinished":"2019-03-05T00:08:52+0000","dateStarted":"2019-03-05T00:08:52+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Below, we calculate some more metrics. The number of false/true positive and negative predictions is also useful:</p>\n<p>True positives are how often the model correctly predicted delayed flights.<br/>False positives are how often the model incorrectly predicted delayed flights.<br/>True negatives indicate how often the model correctly predicted not delayed flights.<br/>False negatives indicate how often the model incorrectly predicted not delayed flights.</p>\n</div>"}]}},{"title":"Calculate some more metrics","text":"val lp = predictions.select(  \"prediction\",\"label\")\nval counttotal = predictions.count().toDouble\nval correct = lp.filter($\"label\" === $\"prediction\").count().toDouble\nval wrong = lp.filter(\"label != prediction\").count().toDouble\nval ratioWrong=wrong/counttotal\nval ratioCorrect=correct/counttotal\nval truen =( lp.filter($\"label\" === 0.0).filter($\"label\" === $\"prediction\").count()) /counttotal\nval truep = (lp.filter($\"label\" === 1.0).filter($\"label\" === $\"prediction\").count())/counttotal\nval falsen = (lp.filter($\"label\" === 0.0).filter(not($\"label\" === $\"prediction\")).count())/counttotal\nval falsep = (lp.filter($\"label\" === 1.0).filter(not($\"label\" === $\"prediction\")).count())/counttotal\n","user":"mapr","dateUpdated":"2019-03-05T00:15:18+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lp: org.apache.spark.sql.DataFrame = [prediction: double, label: double]\ncounttotal: Double = 18500.0\ncorrect: Double = 11703.0\nwrong: Double = 6797.0\nratioWrong: Double = 0.3674054054054054\nratioCorrect: Double = 0.6325945945945946\ntruen: Double = 0.34075675675675676\ntruep: Double = 0.29183783783783784\nfalsen: Double = 0.18637837837837837\nfalsep: Double = 0.18102702702702703\n"}]},"apps":[],"jobName":"paragraph_1551718401580_-435132605","id":"20181015-224231_2027590368","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1358","dateFinished":"2019-03-05T00:15:26+0000","dateStarted":"2019-03-05T00:15:18+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"user":"mapr","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1551744586770_719697137","id":"20190305-000946_899862325","dateCreated":"2019-03-05T00:09:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15570","text":"%md \nHow do you think the accuracy could be improved?\nAdd more data\nadd more types of data, for example holidays, weather, airport or airline carrier problems.\n","dateUpdated":"2019-03-05T00:11:06+0000","dateFinished":"2019-03-05T00:11:06+0000","dateStarted":"2019-03-05T00:11:06+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>How do you think the accuracy could be improved?<br/>Add more data<br/>add more types of data, for example holidays, weather, airport or airline carrier problems.</p>\n</div>"}]}},{"text":"var dir =\"maprfs:///user/mapr/data/\"\nmodel.write.overwrite().save(dir)","user":"mapr","dateUpdated":"2019-03-05T00:13:43+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true,"editorHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dir: String = maprfs:///user/mapr/data/\n"}]},"apps":[],"jobName":"paragraph_1551718401584_-1528059308","id":"20171107-112947_525619195","dateCreated":"2019-03-04T16:53:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1361","dateFinished":"2019-03-05T00:13:48+0000","dateStarted":"2019-03-05T00:13:43+0000","title":"Save the model to use with streaming data","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs","http://mapr-resman:8088/proxy/application_1551304623276_0011//jobs"],"interpreterSettingId":"spark"}}},{"user":"mapr","dateUpdated":"2019-03-04T23:20:15+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1551718401585_1654183482","id":"20171122-091021_1615582434","dateCreated":"2019-03-04T16:53:21+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1362"}],"name":"FlightDelayPrediction","id":"2E593PKFJ","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}